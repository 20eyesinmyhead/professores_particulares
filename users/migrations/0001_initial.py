# Generated by Django 5.2.7 on 2025-10-29 23:29

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='endereço de email')),
                ('nome_completo', models.CharField(max_length=150, verbose_name='Nome Completo')),
                ('como_deseja_ser_chamado', models.CharField(blank=True, max_length=50, verbose_name='Como Deseja Ser Chamado')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='CPF')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('cidade', models.CharField(blank=True, max_length=100, verbose_name='Cidade')),
                ('cep', models.CharField(blank=True, max_length=10, verbose_name='CEP')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='Foto de Perfil')),
                ('escolaridade', models.TextField(blank=True, verbose_name='Escolaridade')),
                ('interesses', models.TextField(blank=True, verbose_name='Interesses e Hobbies')),
                ('historico_aprendizagem', models.TextField(blank=True, verbose_name='Histórico de Aprendizagem (Aluno)')),
                ('biografia', models.TextField(blank=True, verbose_name='Biografia Pessoal')),
                ('is_professor', models.BooleanField(default=False, help_text='Designa se este usuário ativou a modalidade professor.', verbose_name='É Professor')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='ContactProfessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assunto', models.CharField(max_length=150, verbose_name='Assunto')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('lida', models.BooleanField(default=False, verbose_name='Lida pelo Professor')),
                ('data_envio', models.DateTimeField(auto_now_add=True, verbose_name='Data de Envio')),
                ('aluno', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mensagens_enviadas', to=settings.AUTH_USER_MODEL, verbose_name='Aluno Remetente')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_recebidas', to=settings.AUTH_USER_MODEL, verbose_name='Professor Destinatário')),
            ],
            options={
                'verbose_name': 'Mensagem de Contato',
                'verbose_name_plural': 'Mensagens de Contato',
                'ordering': ['-data_envio'],
            },
        ),
        migrations.CreateModel(
            name='ProfessorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplinas', models.TextField(help_text='Ex: Matemática, Física, Português. Separe por vírgulas.', verbose_name='Disciplinas Lecionadas')),
                ('tarifa_hora', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Tarifa por Hora (R$)')),
                ('curriculum', models.TextField(blank=True, help_text='Experiência profissional relevante, certificações, etc.', verbose_name='Conteúdo do Currículo')),
                ('bio_profissional', models.TextField(blank=True, help_text='Breve descrição da sua experiência e qualificações como professor.', verbose_name='Bio Profissional')),
                ('sobre_a_aula', models.TextField(blank=True, help_text='Detalhes sobre sua metodologia e formato de aula.', verbose_name='Sobre a Aula')),
                ('is_voluntario', models.BooleanField(default=False, verbose_name='É Voluntário')),
                ('aceita_online', models.BooleanField(default=False, verbose_name='Aceita Aulas Online')),
                ('aceita_grupo', models.BooleanField(default=False, verbose_name='Aceita Aulas em Grupo')),
                ('status_ativo', models.BooleanField(default=True, verbose_name='Ativamente Aceitando Alunos')),
                ('data_validacao', models.DateField(blank=True, null=True, verbose_name='Data de Ativação do Perfil')),
                ('modalidades', models.CharField(blank=True, choices=[('P', 'Presencial'), ('O', 'Online'), ('AD', 'Domicílio do Aluno'), ('AP', 'Domicílio do Professor'), ('TO', 'Todos (Presencial e Online)')], default='O', max_length=2, verbose_name='Modalidades de Aula')),
                ('foto_profissional', models.ImageField(blank=True, help_text='Uma foto específica para seu perfil profissional, se diferente da foto geral.', null=True, upload_to='professor_pics/', verbose_name='Foto Profissional')),
                ('media_avaliacoes', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='Média de Avaliações')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='professorprofile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Professor',
                'verbose_name_plural': 'Perfis de Professores',
            },
        ),
    ]
